#!/usr/bin/env python

from setuptools import setup, find_packages
import os

pkg_root = os.path.dirname(__file__)

# Error-handling here is to allow package to be built w/o README included
try: readme = open(os.path.join(pkg_root, 'README.md')).read()
except IOError: readme = ''


def get_pipe_constants():
	'Use gcc to get values of F_SETPIPE_SZ and F_GETPIPE_SZ constants.'
	from tempfile import NamedTemporaryFile
	from subprocess import Popen, PIPE

	with NamedTemporaryFile() as tmp_bin:
		proc = Popen(['cc', '-xc', '-o', '/dev/stdout', '-'], stdin=PIPE, stdout=tmp_bin)
		proc.stdin.write(
			'#include <stdio.h>\n#include <linux/fcntl.h>\n'
			'int main(void) { printf("%d %d", F_SETPIPE_SZ, F_GETPIPE_SZ); }\n' )
		proc.stdin.close()
		if proc.wait(): raise RuntimeError('Failed to run gcc to get F_*PIPE_SZ constants')
		proc = Popen([tmp_bin], stdout=PIPE)
		fcntl_flags = map(int, proc.stdout.read().split())
		if proc.wait(): raise RuntimeError('Failed to get F_*PIPE_SZ constants')

	with open(os.path.join(pkg_root, '__init__.py'), 'w') as dst:
		dst.write(
			'# Auto-generated by setup.py, all changes here will be lost!\n'
			'fcntl_flags = dict(F_SETPIPE_SZ={}, F_GETPIPE_SZ={})\n'.format(*fcntl_flags) )


setup(

	name = 'fs-bitrot-scrubber',
	version = '13.04.0',
	author = 'Mike Kazantsev',
	author_email = 'mk.fraggod@gmail.com',
	license = 'WTFPL',
	keywords = [ 'filesystem', 'fs', 'bitrot', 'corruption', 'change', 'detection',
		'backup', 'alteration', 'scrubbing', 'scrub', 'integrity', 'decay', 'bit rot',
		'storage', 'data', 'at-rest', 'at rest', 'disk', 'failure', 'control', 'checksum' ],
	url = 'http://github.com/mk-fg/fs-bitrot-scrubber',

	description = 'Tool to detect userspace-visible changes to'
		' (supposedly) at-rest data on any posix filesystem by scrubbing file contents',
	long_description = readme,

	classifiers = [
		'Development Status :: 4 - Beta',
		'Environment :: Console',
		'Environment :: No Input/Output (Daemon)',
		'Intended Audience :: Developers',
		'Intended Audience :: End Users/Desktop',
		'Intended Audience :: System Administrators',
		'License :: OSI Approved',
		'Operating System :: POSIX',
		'Programming Language :: Python',
		'Programming Language :: Python :: 2.7',
		'Programming Language :: Python :: 2 :: Only',
		'Topic :: Utilities' ],

	install_requires = ['layered-yaml-attrdict-config'],

	packages = find_packages(),
	include_package_data = True,
	zip_safe = False,

	package_data = {'fs_bitrot_scrubber': ['core.yaml']},
	entry_points = dict(console_scripts=[
		'fs-bitrot-scrubber = fs_bitrot_scrubber.core:main' ]) )
